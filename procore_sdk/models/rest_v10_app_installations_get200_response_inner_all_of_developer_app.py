# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from procore_sdk.models.rest_v10_app_installations_get200_response_inner_all_of_developer_app_marketplace_app import RestV10AppInstallationsGet200ResponseInnerAllOfDeveloperAppMarketplaceApp
from typing import Optional, Set
from typing_extensions import Self

class RestV10AppInstallationsGet200ResponseInnerAllOfDeveloperApp(BaseModel):
    """
    RestV10AppInstallationsGet200ResponseInnerAllOfDeveloperApp
    """ # noqa: E501
    id: Optional[StrictInt] = Field(default=None, description="ID")
    app_type: Optional[StrictStr] = Field(default=None, description="App Type")
    connectable: Optional[StrictBool] = Field(default=None, description="Connectable")
    description: Optional[StrictStr] = Field(default=None, description="User provided description of developer app")
    internal: Optional[StrictBool] = Field(default=None, description="Is the developer app internal")
    internal_name: Optional[StrictStr] = Field(default=None, description="Internal name of developer app")
    marketplace_app: Optional[RestV10AppInstallationsGet200ResponseInnerAllOfDeveloperAppMarketplaceApp] = None
    marketplace_app_url: Optional[StrictStr] = Field(default=None, description="URL to the marketplace app")
    name: Optional[StrictStr] = Field(default=None, description="User name of developer app")
    published_app_version_id: Optional[StrictStr] = Field(default=None, description="ID of the published app version")
    thumbnail_url: Optional[StrictStr] = Field(default=None, description="URL to the thumbnail image")
    uid: Optional[StrictStr] = Field(default=None, description="UID")
    __properties: ClassVar[List[str]] = ["id", "app_type", "connectable", "description", "internal", "internal_name", "marketplace_app", "marketplace_app_url", "name", "published_app_version_id", "thumbnail_url", "uid"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of RestV10AppInstallationsGet200ResponseInnerAllOfDeveloperApp from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of marketplace_app
        if self.marketplace_app:
            _dict['marketplace_app'] = self.marketplace_app.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of RestV10AppInstallationsGet200ResponseInnerAllOfDeveloperApp from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "id": obj.get("id"),
            "app_type": obj.get("app_type"),
            "connectable": obj.get("connectable"),
            "description": obj.get("description"),
            "internal": obj.get("internal"),
            "internal_name": obj.get("internal_name"),
            "marketplace_app": RestV10AppInstallationsGet200ResponseInnerAllOfDeveloperAppMarketplaceApp.from_dict(obj["marketplace_app"]) if obj.get("marketplace_app") is not None else None,
            "marketplace_app_url": obj.get("marketplace_app_url"),
            "name": obj.get("name"),
            "published_app_version_id": obj.get("published_app_version_id"),
            "thumbnail_url": obj.get("thumbnail_url"),
            "uid": obj.get("uid")
        })
        return _obj


