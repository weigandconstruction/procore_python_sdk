# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class RestV10TasksSyncPatchRequestUpdatesInner(BaseModel):
    """
    RestV10TasksSyncPatchRequestUpdatesInner
    """ # noqa: E501
    name: Optional[StrictStr] = Field(default=None, description="Task name.")
    start: Optional[datetime] = Field(default=None, description="Task start timestamp.")
    finish: Optional[datetime] = Field(default=None, description="Task finish timestamp.")
    actual_start: Optional[datetime] = Field(default=None, description="Actual start timestamp for this task.")
    actual_finish: Optional[datetime] = Field(default=None, description="Actual finish timestamp for this task.")
    percentage: Optional[StrictInt] = Field(default=None, description="Percent complete value for this task.")
    critical_path: Optional[StrictBool] = Field(default=None, description="True if this task is on the critical path.")
    milestone: Optional[StrictBool] = Field(default=None, description="True if this task is a milestone.")
    row_number: Optional[StrictInt] = Field(default=None, description="The row number of a task defines the sequence in which tasks are normally expected to be displayed.")
    has_children: Optional[StrictBool] = Field(default=None, description="Flag set to true if this is a summary task, i.e. this task has child tasks.")
    source_uid: Optional[StrictStr] = Field(default=None, description="The unique identifier for this task from the external system which owns the schedule data.")
    parent_id: Optional[StrictInt] = Field(default=None, description="ID of the parent task.")
    full_outline_path: Optional[StrictStr] = Field(default=None, description="Task full outline path.")
    activity_id: Optional[StrictStr] = Field(default=None, description="For tasks imported from external systems which have the concept of an \"Activity ID\" (for example Primavera P6), this attribute is used to hold the Activity ID value. Note that due to an oversight during the creation of this API, the value supplied here will be rendered as the `schedule_activity_id` attribute in the response body. This will be corrected in a later version of the API.")
    wbs: Optional[StrictStr] = Field(default=None, description="Work Breakdown Structure (WBS) number for this task.")
    schedule_duration: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The duration of this task in days as defined by the external system which owns the schedule data.")
    resource_ids: Optional[List[StrictInt]] = Field(default=None, description="Resources assigned to this task, represented as an array of resource ID values.")
    notes: Optional[StrictStr] = Field(default=None, description="Arbitrary notes about this task.")
    baseline_start: Optional[datetime] = Field(default=None, description="The baseline start timestamp for this task.")
    baseline_finish: Optional[datetime] = Field(default=None, description="The baseline finish timestamp for this task.")
    start_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The start variance in days for this task, as calculated by the external system which owns the schedule data.")
    finish_variance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The finish variance in days for this task, as calculated by the external system which owns the schedule data.")
    manually_edited: Optional[StrictBool] = Field(default=None, description="Set to true if the task has been created or modified in Procore, false if the task was imported from an external schedule and has not been modified in Procore.")
    __properties: ClassVar[List[str]] = ["name", "start", "finish", "actual_start", "actual_finish", "percentage", "critical_path", "milestone", "row_number", "has_children", "source_uid", "parent_id", "full_outline_path", "activity_id", "wbs", "schedule_duration", "resource_ids", "notes", "baseline_start", "baseline_finish", "start_variance", "finish_variance", "manually_edited"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of RestV10TasksSyncPatchRequestUpdatesInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of RestV10TasksSyncPatchRequestUpdatesInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "name": obj.get("name"),
            "start": obj.get("start"),
            "finish": obj.get("finish"),
            "actual_start": obj.get("actual_start"),
            "actual_finish": obj.get("actual_finish"),
            "percentage": obj.get("percentage"),
            "critical_path": obj.get("critical_path"),
            "milestone": obj.get("milestone"),
            "row_number": obj.get("row_number"),
            "has_children": obj.get("has_children"),
            "source_uid": obj.get("source_uid"),
            "parent_id": obj.get("parent_id"),
            "full_outline_path": obj.get("full_outline_path"),
            "activity_id": obj.get("activity_id"),
            "wbs": obj.get("wbs"),
            "schedule_duration": obj.get("schedule_duration"),
            "resource_ids": obj.get("resource_ids"),
            "notes": obj.get("notes"),
            "baseline_start": obj.get("baseline_start"),
            "baseline_finish": obj.get("baseline_finish"),
            "start_variance": obj.get("start_variance"),
            "finish_variance": obj.get("finish_variance"),
            "manually_edited": obj.get("manually_edited")
        })
        return _obj


