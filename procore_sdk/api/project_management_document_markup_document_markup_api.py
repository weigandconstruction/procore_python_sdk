# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from procore_sdk.models.rest_v10_document_markup_downloadable_pdfs_find_or_create_post200_response import RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response
from procore_sdk.models.rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request import RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest

from procore_sdk.api_client import ApiClient, RequestSerialized
from procore_sdk.api_response import ApiResponse
from procore_sdk.rest import RESTResponseType


class ProjectManagementDocumentMarkupDocumentMarkupApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def rest_v10_document_markup_downloadable_pdfs_find_or_create_post(
        self,
        procore_company_id: Annotated[StrictInt, Field(description="Unique company identifier associated with the Procore User Account.")],
        rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest,
        version_datetime: Annotated[Optional[StrictStr], Field(description="Version Datetime of the Document")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response:
        """Show or Create Document Markup Downloadable PDF

        Find or Create Document Markup Downloadable PDF. Starts processing to create a downloadable PDF with markup. When completed, the same request will include a download URL for the PDF. item_id, item_type, and attachment_id paramters are the same parameters included in the URL when viewing the attachment in procore. Example: app.procore.com/161072/project/submittal_logs/document_viewer?attachment_id=43&item_id=42&item_type=SubmittalLog&project_id=161072

        :param procore_company_id: Unique company identifier associated with the Procore User Account. (required)
        :type procore_company_id: int
        :param rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: (required)
        :type rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest
        :param version_datetime: Version Datetime of the Document
        :type version_datetime: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._rest_v10_document_markup_downloadable_pdfs_find_or_create_post_serialize(
            procore_company_id=procore_company_id,
            rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request=rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request,
            version_datetime=version_datetime,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response",
            '202': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost202Response",
            '400': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '403': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '404': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '409': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost409Response",
            '422': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def rest_v10_document_markup_downloadable_pdfs_find_or_create_post_with_http_info(
        self,
        procore_company_id: Annotated[StrictInt, Field(description="Unique company identifier associated with the Procore User Account.")],
        rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest,
        version_datetime: Annotated[Optional[StrictStr], Field(description="Version Datetime of the Document")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response]:
        """Show or Create Document Markup Downloadable PDF

        Find or Create Document Markup Downloadable PDF. Starts processing to create a downloadable PDF with markup. When completed, the same request will include a download URL for the PDF. item_id, item_type, and attachment_id paramters are the same parameters included in the URL when viewing the attachment in procore. Example: app.procore.com/161072/project/submittal_logs/document_viewer?attachment_id=43&item_id=42&item_type=SubmittalLog&project_id=161072

        :param procore_company_id: Unique company identifier associated with the Procore User Account. (required)
        :type procore_company_id: int
        :param rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: (required)
        :type rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest
        :param version_datetime: Version Datetime of the Document
        :type version_datetime: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._rest_v10_document_markup_downloadable_pdfs_find_or_create_post_serialize(
            procore_company_id=procore_company_id,
            rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request=rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request,
            version_datetime=version_datetime,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response",
            '202': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost202Response",
            '400': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '403': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '404': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '409': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost409Response",
            '422': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def rest_v10_document_markup_downloadable_pdfs_find_or_create_post_without_preload_content(
        self,
        procore_company_id: Annotated[StrictInt, Field(description="Unique company identifier associated with the Procore User Account.")],
        rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest,
        version_datetime: Annotated[Optional[StrictStr], Field(description="Version Datetime of the Document")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Show or Create Document Markup Downloadable PDF

        Find or Create Document Markup Downloadable PDF. Starts processing to create a downloadable PDF with markup. When completed, the same request will include a download URL for the PDF. item_id, item_type, and attachment_id paramters are the same parameters included in the URL when viewing the attachment in procore. Example: app.procore.com/161072/project/submittal_logs/document_viewer?attachment_id=43&item_id=42&item_type=SubmittalLog&project_id=161072

        :param procore_company_id: Unique company identifier associated with the Procore User Account. (required)
        :type procore_company_id: int
        :param rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: (required)
        :type rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request: RestV10DocumentMarkupDownloadablePdfsFindOrCreatePostRequest
        :param version_datetime: Version Datetime of the Document
        :type version_datetime: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._rest_v10_document_markup_downloadable_pdfs_find_or_create_post_serialize(
            procore_company_id=procore_company_id,
            rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request=rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request,
            version_datetime=version_datetime,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost200Response",
            '202': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost202Response",
            '400': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '403': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '404': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
            '409': "RestV10DocumentMarkupDownloadablePdfsFindOrCreatePost409Response",
            '422': "RestV10CompaniesCompanyIdWorkflowPermanentLogsGet401Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _rest_v10_document_markup_downloadable_pdfs_find_or_create_post_serialize(
        self,
        procore_company_id,
        rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request,
        version_datetime,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if version_datetime is not None:
            
            _query_params.append(('version_datetime', version_datetime))
            
        # process the header parameters
        if procore_company_id is not None:
            _header_params['Procore-Company-Id'] = procore_company_id
        # process the form parameters
        # process the body parameter
        if rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request is not None:
            _body_params = rest_v10_document_markup_downloadable_pdfs_find_or_create_post_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/rest/v1.0/document_markup_downloadable_pdfs/find_or_create',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


