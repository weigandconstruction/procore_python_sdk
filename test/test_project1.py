# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.project1 import Project1

class TestProject1(unittest.TestCase):
    """Project1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Project1:
        """Test Project1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Project1`
        """
        model = Project1()
        if include_optional:
            return Project1(
                id = 12738,
                name = 'Lakeside Mixed Use',
                is_demo = False,
                parent_job_id = 123456,
                display_name = '12 - Lakeside Mixed Use',
                project_number = '12',
                address = '123 First St.',
                city = 'Carpinteria',
                state_code = 'CA',
                country_code = 'US',
                zip = '93103',
                county = 'Santa Barbara County',
                time_zone = 'US/Pacific',
                latitude = 34.3850464855729,
                longitude = -119.490849121334,
                stage = 'Course of Construction',
                project_stage = procore_sdk.models.project_stage.ProjectStage(
                    id = 3, 
                    name = 'Course of Construction', ),
                project_template = procore_sdk.models.project_template.ProjectTemplate(
                    id = 3, 
                    name = 'Fairview Apartments', ),
                phone = '480-800-5555',
                created_at = '2014-12-29T21:53:56Z',
                updated_at = '2015-04-20T18:09:33Z',
                active = True,
                origin_id = 'OD-2398273424',
                origin_data = '459247544',
                origin_code = 'Code 123',
                owners_project_id = 1234,
                total_value = '10000.0',
                store_number = '3',
                accounting_project_number = '3456',
                designated_market_area = 'Southeast',
                project_region_id = 1,
                project_bid_type_id = 1,
                project_owner_type_id = 1,
                photo_id = 1,
                start_date = 'Thu Oct 31 00:00:00 UTC 2019',
                completion_date = 'Sat Oct 31 00:00:00 UTC 2020',
                estimated_value = '10000.0',
                fax = '480-800-5555',
                company = procore_sdk.models.project_company.ProjectCompany(
                    id = 1234, 
                    name = 'CA Construction', ),
                custom_fields = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields(
                    custom_field_%{custom_field_string_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_string_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_string_definition_id_(
                        data_type = 'string', 
                        value = 'custom field value', ), 
                    custom_field_%{custom_field_decimal_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_decimal_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_decimal_definition_id_(
                        data_type = 'decimal', 
                        value = 2.2, ), 
                    custom_field_%{custom_field_boolean_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_boolean_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_boolean_definition_id_(
                        data_type = 'boolean', 
                        value = True, ), 
                    custom_field_%{custom_field_lov_entry_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id_(
                        data_type = 'lov_entry', 
                        value = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id__value.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id__value(
                            id = 1, 
                            label = 'Open', ), ), 
                    custom_field_%{custom_field_lov_entries_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_lov_entries_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_lov_entries_definition_id_(
                        data_type = 'lov_entries', ), )
            )
        else:
            return Project1(
        )
        """

    def testProject1(self):
        """Test Project1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
