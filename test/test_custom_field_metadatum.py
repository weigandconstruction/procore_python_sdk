# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.custom_field_metadatum import CustomFieldMetadatum

class TestCustomFieldMetadatum(unittest.TestCase):
    """CustomFieldMetadatum unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomFieldMetadatum:
        """Test CustomFieldMetadatum
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomFieldMetadatum`
        """
        model = CustomFieldMetadatum()
        if include_optional:
            return CustomFieldMetadatum(
                id = 999,
                custom_field_definition_id = 999,
                position = 999,
                required = True,
                visible = True,
                company_id = 999,
                host_type = 'ProcoreEntityName',
                source_type = 'ConfigurableFieldSet::Base',
                source_id = '999',
                label = 'Impact',
                data_type = 'string',
                variant = 'string',
                default_value = 'string',
                row = 1,
                column = 1,
                column_width = 3,
                custom_fields_section_id = 789,
                lov_entries = [
                    procore_sdk.models.custom_field_lov_entry.Custom Field Lov Entry(
                        id = 999, 
                        label = 'High', 
                        position = 1, 
                        active = True, )
                    ]
            )
        else:
            return CustomFieldMetadatum(
        )
        """

    def testCustomFieldMetadatum(self):
        """Test CustomFieldMetadatum"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
