# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_projects_sync_patch_request import RestV10ProjectsSyncPatchRequest

class TestRestV10ProjectsSyncPatchRequest(unittest.TestCase):
    """RestV10ProjectsSyncPatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10ProjectsSyncPatchRequest:
        """Test RestV10ProjectsSyncPatchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10ProjectsSyncPatchRequest`
        """
        model = RestV10ProjectsSyncPatchRequest()
        if include_optional:
            return RestV10ProjectsSyncPatchRequest(
                company_id = 3461,
                updates = [
                    procore_sdk.models.rest_v10_projects_sync_patch_request_updates_inner.RestV10ProjectsSyncPatch_request_updates_inner(
                        id = 1, 
                        active = True, 
                        address = '500 Construction Way', 
                        city = 'Carpinteria', 
                        country_code = 'US', 
                        description = 'A description of the project', 
                        start_date = 'Fri May 15 00:00:00 UTC 2015', 
                        completion_date = 'Fri May 15 00:00:00 UTC 2015', 
                        total_value = 10000, 
                        warranty_start_date = 'Sat May 16 00:00:00 UTC 2015', 
                        warranty_end_date = 'Fri Jun 10 00:00:00 UTC 2016', 
                        flag = 'Yellow', 
                        image_id = 10, 
                        name = 'Project F', 
                        office_id = 3610, 
                        phone = '310-555-5555', 
                        project_number = 'A-2', 
                        public_notes = 'Notes', 
                        project_stage_id = 1, 
                        square_feet = 5000, 
                        state_code = 'CA', 
                        time_zone = 'US/Pacific', 
                        zip = '93110', 
                        program_id = 5, 
                        project_bid_type_id = 2, 
                        project_type_id = 5, 
                        project_owner_type_id = 8, 
                        project_region_id = 22, 
                        project_template_id = 99, 
                        origin_id = '657', 
                        origin_data = '{"data_field":{"is_important":true}}', 
                        department_ids = [3128,3127], 
                        estimated_value = 10000, 
                        estimated_start_date = 'Fri May 15 00:00:00 UTC 2015', 
                        estimated_completion_date = 'Sun May 31 00:00:00 UTC 2015', 
                        store_number = '3', 
                        accounting_project_number = '3456', 
                        designated_market_area = 'Southeast', 
                        enable_copy_of_standard_cost_codes = True, )
                    ]
            )
        else:
            return RestV10ProjectsSyncPatchRequest(
                company_id = 3461,
                updates = [
                    procore_sdk.models.rest_v10_projects_sync_patch_request_updates_inner.RestV10ProjectsSyncPatch_request_updates_inner(
                        id = 1, 
                        active = True, 
                        address = '500 Construction Way', 
                        city = 'Carpinteria', 
                        country_code = 'US', 
                        description = 'A description of the project', 
                        start_date = 'Fri May 15 00:00:00 UTC 2015', 
                        completion_date = 'Fri May 15 00:00:00 UTC 2015', 
                        total_value = 10000, 
                        warranty_start_date = 'Sat May 16 00:00:00 UTC 2015', 
                        warranty_end_date = 'Fri Jun 10 00:00:00 UTC 2016', 
                        flag = 'Yellow', 
                        image_id = 10, 
                        name = 'Project F', 
                        office_id = 3610, 
                        phone = '310-555-5555', 
                        project_number = 'A-2', 
                        public_notes = 'Notes', 
                        project_stage_id = 1, 
                        square_feet = 5000, 
                        state_code = 'CA', 
                        time_zone = 'US/Pacific', 
                        zip = '93110', 
                        program_id = 5, 
                        project_bid_type_id = 2, 
                        project_type_id = 5, 
                        project_owner_type_id = 8, 
                        project_region_id = 22, 
                        project_template_id = 99, 
                        origin_id = '657', 
                        origin_data = '{"data_field":{"is_important":true}}', 
                        department_ids = [3128,3127], 
                        estimated_value = 10000, 
                        estimated_start_date = 'Fri May 15 00:00:00 UTC 2015', 
                        estimated_completion_date = 'Sun May 31 00:00:00 UTC 2015', 
                        store_number = '3', 
                        accounting_project_number = '3456', 
                        designated_market_area = 'Southeast', 
                        enable_copy_of_standard_cost_codes = True, )
                    ],
        )
        """

    def testRestV10ProjectsSyncPatchRequest(self):
        """Test RestV10ProjectsSyncPatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
