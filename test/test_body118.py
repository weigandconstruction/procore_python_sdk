# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.body118 import Body118

class TestBody118(unittest.TestCase):
    """Body118 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Body118:
        """Test Body118
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Body118`
        """
        model = Body118()
        if include_optional:
            return Body118(
                project_id = 12345,
                budget_line_item = procore_sdk.models.budget_line_item.Budget Line Item(
                    cost_code_id = 12345, 
                    line_item_type_id = 12345, 
                    original_budget_amount = 10000.00, 
                    uom = 'hours', 
                    quantity = 250.5, 
                    unit_cost = 123.5, 
                    calculation_strategy = 'manual', )
            )
        else:
            return Body118(
                project_id = 12345,
                budget_line_item = procore_sdk.models.budget_line_item.Budget Line Item(
                    cost_code_id = 12345, 
                    line_item_type_id = 12345, 
                    original_budget_amount = 10000.00, 
                    uom = 'hours', 
                    quantity = 250.5, 
                    unit_cost = 123.5, 
                    calculation_strategy = 'manual', ),
        )
        """

    def testBody118(self):
        """Test Body118"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
