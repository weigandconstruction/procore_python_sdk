# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.observation_item1 import ObservationItem1

class TestObservationItem1(unittest.TestCase):
    """ObservationItem1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ObservationItem1:
        """Test ObservationItem1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ObservationItem1`
        """
        model = ObservationItem1()
        if include_optional:
            return ObservationItem1(
                id = 9378,
                number = '96',
                name = 'Personnel not wearing full PPE',
                description = 'Worker was seen not wearing their hard hat',
                status = 'initiated',
                checklist_item = procore_sdk.models.observation_item_1_checklist_item.Observation_Item_1_checklist_item(
                    id = 98, ),
                checklist_list = procore_sdk.models.observation_item_1_checklist_list.Observation_Item_1_checklist_list(
                    id = 11, ),
                priority = 'Urgent',
                date_notified = 'Wed Feb 17 00:00:00 UTC 2016',
                due_date = 'Thu Feb 25 00:00:00 UTC 2016',
                closed_at = '2020-01-23T21:39:40Z',
                created_at = '2012-10-23T21:39:40Z',
                updated_at = '2012-10-24T21:39:40Z',
                deleted_at = '2012-10-24T21:39:40Z',
                description_rich_text = 'Description of Observation',
                personal = False,
                current_drawing_revision_ids = [
                    56
                    ],
                drawing_revisions = [
                    56
                    ],
                drawing_ids = [
                    56
                    ],
                origin = procore_sdk.models.observation_origin.Observation origin(
                    type = 'inspection', 
                    payload = procore_sdk.models.origin_payload.Origin Payload(
                        checklist_item_id = 42, 
                        checklist_list_id = 42, 
                        coordination_issue_id = 2312, 
                        coordination_issue_number = 21, 
                        incident_action_id = 53, 
                        incident_id = 53, 
                        bim_model_id = 63, 
                        bim_model_name = 'Combined Model', ), ),
                attachments = [
                    procore_sdk.models.observation_item_1_attachments_inner.Observation_Item_1_attachments_inner(
                        id = 56, 
                        name = '', 
                        url = '', 
                        thumbnail_url = 'http://www.example.com/', 
                        filename = '', )
                    ],
                assignee = procore_sdk.models.observation_item_assignee.Observation Item assignee(
                    id = 29837, 
                    name = 'John Smith', 
                    vendor = procore_sdk.models.observation_item_assignee's_company.Observation Item Assignee's Company(
                        id = 2675, 
                        name = 'Brick and Morty', ), ),
                distribution_members = [
                    procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                        id = 160586, 
                        login = 'carl.contractor@example.com', 
                        name = 'Carl Contractor', )
                    ],
                created_by = procore_sdk.models.observation_item_creator.Observation Item Creator(
                    id = 47531, 
                    name = 'Jane Doe', 
                    login = 'carl.contractor@example.com', 
                    vendor = procore_sdk.models.observation_item_creator's_company.Observation Item Creator's Company(
                        id = 2675, 
                        name = 'Brick and Morty', ), ),
                specification_section = procore_sdk.models.observation_item_1_specification_section.Observation_Item_1_specification_section(
                    id = 56, 
                    description = '', 
                    number = '42', 
                    section = '42', 
                    latest_revision_url = 'link_to_pdf', ),
                location = procore_sdk.models.location.Location(
                    id = 15504, 
                    name = '1space>1 space', 
                    node_name = '1 space', 
                    parent_id = 788866, 
                    created_at = '2016-08-01T23:33:54Z', 
                    updated_at = '2016-08-01T23:33:54Z', ),
                trade = procore_sdk.models.trade.Trade(
                    id = 999, 
                    name = '09 - acoustical panels', 
                    active = True, 
                    updated_at = '2016-08-01T23:33:54Z', ),
                type = procore_sdk.models.observation_type.Observation Type(
                    id = 9, 
                    category = 'Commissioning', 
                    category_key = 'work_to_complete', 
                    name = 'Commissioning', 
                    active = True, 
                    company_active = True, 
                    parent_inactive = False, 
                    in_use = False, 
                    kind = 'project', 
                    name_translations = procore_sdk.models.observation_type_name_translations.Observation_Type_name_translations(
                        en = 'Commissioning', 
                        es = 'Puesta en marcha', 
                        fr_ca = 'Mise en service', 
                        en_au = 'Commissioning', ), 
                    localized_name = 'Commissioning', ),
                contributing_behavior = procore_sdk.models.contributing_behavior.Contributing Behavior(
                    id = 999, 
                    name = 'Distraction', 
                    active = True, 
                    global = False, 
                    created_at = '2016-10-25T17:53:35Z', 
                    updated_at = '2016-10-25T17:53:35Z', ),
                contributing_condition = procore_sdk.models.contributing_condition.Contributing Condition(
                    id = 9001, 
                    name = 'Environment', 
                    active = True, 
                    global = False, 
                    created_at = '2019-01-18T21:36:55Z', 
                    updated_at = '2019-01-18T21:46:56Z', ),
                hazard = procore_sdk.models.hazard.Hazard(
                    id = 1738, 
                    name = 'Slip', 
                    active = True, 
                    global = False, 
                    created_at = '2016-10-25T17:53:35Z', 
                    updated_at = '2016-10-25T17:53:35Z', ),
                custom_fields = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields(
                    custom_field_%{custom_field_string_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_string_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_string_definition_id_(
                        data_type = 'string', 
                        value = 'custom field value', ), 
                    custom_field_%{custom_field_decimal_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_decimal_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_decimal_definition_id_(
                        data_type = 'decimal', 
                        value = 2.2, ), 
                    custom_field_%{custom_field_boolean_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_boolean_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_boolean_definition_id_(
                        data_type = 'boolean', 
                        value = True, ), 
                    custom_field_%{custom_field_lov_entry_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id_(
                        data_type = 'lov_entry', 
                        value = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id__value.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_lov_entry_definition_id__value(
                            id = 1, 
                            label = 'Open', ), ), 
                    custom_field_%{custom_field_lov_entries_definition_id} = procore_sdk.models.rest_v11_projects_project_id_recycle_bin_incidents_witness_statements_get_200_response_inner_custom_fields_custom_field___custom_field_lov_entries_definition_id_.RestV11ProjectsProjectIdRecycleBinIncidentsWitnessStatementsGet_200_response_inner_custom_fields_custom_field___custom_field_lov_entries_definition_id_(
                        data_type = 'lov_entries', ), )
            )
        else:
            return ObservationItem1(
        )
        """

    def testObservationItem1(self):
        """Test ObservationItem1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
