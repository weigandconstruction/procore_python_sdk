# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_settings_permissions_get200_response_tools_inner import RestV10SettingsPermissionsGet200ResponseToolsInner

class TestRestV10SettingsPermissionsGet200ResponseToolsInner(unittest.TestCase):
    """RestV10SettingsPermissionsGet200ResponseToolsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10SettingsPermissionsGet200ResponseToolsInner:
        """Test RestV10SettingsPermissionsGet200ResponseToolsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10SettingsPermissionsGet200ResponseToolsInner`
        """
        model = RestV10SettingsPermissionsGet200ResponseToolsInner()
        if include_optional:
            return RestV10SettingsPermissionsGet200ResponseToolsInner(
                id = 1,
                name = 'documents',
                friendly_name = 'Documents',
                domain_id = 14,
                tab_group = 'core',
                available_for_user = True,
                url = '/10/project/documents',
                user_access_level = procore_sdk.models.rest_v10_settings_permissions_get_200_response_tools_inner_user_access_level.RestV10SettingsPermissionsGet_200_response_tools_inner_user_access_level(
                    id = 4, 
                    name = 'Admin', ),
                permitted_actions = [
                    procore_sdk.models.rest_v10_settings_permissions_get_200_response_tools_inner_permitted_actions_inner.RestV10SettingsPermissionsGet_200_response_tools_inner_permitted_actions_inner(
                        id = 12, 
                        action_name = 'destroy_files_and_folders', 
                        label = 'Delete folders and files', 
                        tool_name = 'documents', )
                    ],
                create_url = 'www.example.com',
                can_create = True,
                trial = False
            )
        else:
            return RestV10SettingsPermissionsGet200ResponseToolsInner(
        )
        """

    def testRestV10SettingsPermissionsGet200ResponseToolsInner(self):
        """Test RestV10SettingsPermissionsGet200ResponseToolsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
