# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.timesheet1 import Timesheet1

class TestTimesheet1(unittest.TestCase):
    """Timesheet1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Timesheet1:
        """Test Timesheet1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Timesheet1`
        """
        model = Timesheet1()
        if include_optional:
            return Timesheet1(
                party = procore_sdk.models.party.Party(
                    id = 1, 
                    name = 'Dolores Umbridge', ),
                other_hours = [
                    procore_sdk.models.other_hours.Other Hours(
                        hours = 40, 
                        project = procore_sdk.models.other_hours_project.Other_Hours_project(
                            id = 1, 
                            name = 'Hotel Remodel', ), )
                    ],
                timecard_entries = [
                    procore_sdk.models.timecard_entry.TimecardEntry(
                        id = 1, 
                        created_at = '2012-10-23T21:39:40Z', 
                        date = 'Tue May 12 00:00:00 UTC 2015', 
                        deleted_at = '2017-07-29T21:39:40Z', 
                        description = 'Description', 
                        billable = True, 
                        hours = '5.0', 
                        updated_at = '2015-11-12T21:26:28Z', 
                        timecard_type = 'Regular Time', 
                        cost_code = 'Summary', 
                        origin_id = 23423, 
                        origin_data = '{'example':'related data'}', 
                        timesheet_status = procore_sdk.models.timesheet.Timesheet(
                            party = procore_sdk.models.party.Party(
                                id = 1, 
                                name = 'Dolores Umbridge', ), 
                            other_hours = [
                                procore_sdk.models.other_hours.Other Hours(
                                    hours = 40, 
                                    project = procore_sdk.models.other_hours_project.Other_Hours_project(
                                        id = 1, 
                                        name = 'Hotel Remodel', ), )
                                ], ), 
                        full_cost_code = procore_sdk.models.timecard_entry_full_cost_code.TimecardEntry_full_cost_code(
                            id = 12345, 
                            name = 'Earthwork', ), 
                        created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                            id = 160586, 
                            login = 'carl.contractor@example.com', 
                            name = 'Carl Contractor', ), 
                        login_information = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                            id = 160586, 
                            login = 'carl.contractor@example.com', 
                            name = 'Carl Contractor', ), 
                        party = procore_sdk.models.party.Party(
                            id = 1, 
                            name = 'Dolores Umbridge', ), 
                        timecard_time_type = procore_sdk.models.timecard_time_type.TimecardTimeType(
                            id = 1, 
                            abbreviated_time_type = 'REG', 
                            company_id = 15125, 
                            global = False, 
                            time_type = 'Another Time', ), 
                        line_item_type_id = 13, )
                    ]
            )
        else:
            return Timesheet1(
        )
        """

    def testTimesheet1(self):
        """Test Timesheet1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
