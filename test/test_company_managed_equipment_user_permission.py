# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.company_managed_equipment_user_permission import CompanyManagedEquipmentUserPermission

class TestCompanyManagedEquipmentUserPermission(unittest.TestCase):
    """CompanyManagedEquipmentUserPermission unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CompanyManagedEquipmentUserPermission:
        """Test CompanyManagedEquipmentUserPermission
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CompanyManagedEquipmentUserPermission`
        """
        model = CompanyManagedEquipmentUserPermission()
        if include_optional:
            return CompanyManagedEquipmentUserPermission(
                id = 93988,
                company_directory_admin = False,
                name = 'user, test',
                user_access_level = procore_sdk.models.company_managed_equipment_user_permission_user_access_level.CompanyManagedEquipmentUserPermission_user_access_level(
                    id = 56, 
                    name = '', ),
                permission_template = {"id":1,"name":"General Contractor","project_specific":true},
                vendor = procore_sdk.models.rest_v10_projects_project_id_waste_logs_get_200_response_inner_vendor.RestV10ProjectsProjectIdWasteLogsGet_200_response_inner_vendor(
                    id = 161072, 
                    name = 'SID Architecture', )
            )
        else:
            return CompanyManagedEquipmentUserPermission(
        )
        """

    def testCompanyManagedEquipmentUserPermission(self):
        """Test CompanyManagedEquipmentUserPermission"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
