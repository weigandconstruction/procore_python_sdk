# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_company_configuration_get200_response import RestV10CompanyConfigurationGet200Response

class TestRestV10CompanyConfigurationGet200Response(unittest.TestCase):
    """RestV10CompanyConfigurationGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10CompanyConfigurationGet200Response:
        """Test RestV10CompanyConfigurationGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10CompanyConfigurationGet200Response`
        """
        model = RestV10CompanyConfigurationGet200Response()
        if include_optional:
            return RestV10CompanyConfigurationGet200Response(
                strict_file_uploading = True,
                enable_image_real_time_as_builts = True,
                currency_symbol = '$',
                currency_display = 'symbol',
                currency_iso_code = 'USD',
                timecard_employees_see_all_projects = True,
                timesheet_enabled_cost_type = [1,2,3],
                timesheet_type = [1,2,3],
                enable_sd_storage = True,
                timesheets_custom_signature_text = 'Custom signature text',
                timesheets_week_start_day = 1,
                use_24_hour_mode = True,
                timesheets_tab_enabled = True,
                timecard_should_track_location = [
                    56
                    ],
                projects_timecard_in_out_enabled = [
                    56
                    ],
                rounding_configuration = procore_sdk.models.rest_v10_company_configuration_get_200_response_rounding_configuration.RestV10CompanyConfigurationGet_200_response_rounding_configuration(
                    rule = 'up', 
                    time_increment = 5, ),
                time_and_materials_company_config = procore_sdk.models.rest_v10_company_configuration_get_200_response_time_and_materials_company_config.RestV10CompanyConfigurationGet_200_response_time_and_materials_company_config(
                    materials_enabled = True, 
                    labor_enabled = True, 
                    equipment_enabled = True, 
                    subcontractors_enabled = True, ),
                projects_timecard_default_lunch_time = [
                    procore_sdk.models.rest_v10_company_configuration_get_200_response_projects_timecard_default_lunch_time_inner.RestV10CompanyConfigurationGet_200_response_projects_timecard_default_lunch_time_inner(
                        project_id = 1234, 
                        timecard_default_lunch_time = 60, )
                    ],
                projects_timecard_default_start_time = [
                    procore_sdk.models.rest_v10_company_configuration_get_200_response_projects_timecard_default_start_time_inner.RestV10CompanyConfigurationGet_200_response_projects_timecard_default_start_time_inner(
                        project_id = 1234, 
                        timecard_default_start_time = '8:00', )
                    ],
                projects_timecard_default_stop_time = [
                    procore_sdk.models.rest_v10_company_configuration_get_200_response_projects_timecard_default_stop_time_inner.RestV10CompanyConfigurationGet_200_response_projects_timecard_default_stop_time_inner(
                        project_id = 1234, 
                        timecard_default_stop_time = '17:00', )
                    ],
                projects_timecard_lunch_time_tracking = [
                    procore_sdk.models.rest_v10_company_configuration_get_200_response_projects_timecard_lunch_time_tracking_inner.RestV10CompanyConfigurationGet_200_response_projects_timecard_lunch_time_tracking_inner(
                        project_id = 1234, 
                        timecard_lunch_time_tracking = 'total_time', )
                    ],
                task_codes_enabled = True,
                timecard_employees_can_select_non_budgeted_items = [
                    56
                    ],
                timecards_private = True,
                timesheet_default_cost_type_id = 12,
                timesheet_erp_default_cost_type_id = 13
            )
        else:
            return RestV10CompanyConfigurationGet200Response(
        )
        """

    def testRestV10CompanyConfigurationGet200Response(self):
        """Test RestV10CompanyConfigurationGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
