# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_projects_project_id_correspondence_types_permissions_get200_response_inner import RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner

class TestRestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner(unittest.TestCase):
    """RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner:
        """Test RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner`
        """
        model = RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner()
        if include_optional:
            return RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner(
                id = 1,
                name = 'documents',
                friendly_name = 'Documents',
                domain_id = 14,
                tab_group = 'core',
                available_for_user = True,
                url = '/10/project/documents',
                user_access_level = None,
                permitted_actions = [
                    procore_sdk.models.rest_v10_settings_permissions_get_200_response_tools_inner_permitted_actions_inner.RestV10SettingsPermissionsGet_200_response_tools_inner_permitted_actions_inner(
                        id = 12, 
                        action_name = 'destroy_files_and_folders', 
                        label = 'Delete folders and files', 
                        tool_name = 'documents', )
                    ]
            )
        else:
            return RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner(
        )
        """

    def testRestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner(self):
        """Test RestV10ProjectsProjectIdCorrespondenceTypesPermissionsGet200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
