# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.generic_tool_item_response import GenericToolItemResponse

class TestGenericToolItemResponse(unittest.TestCase):
    """GenericToolItemResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenericToolItemResponse:
        """Test GenericToolItemResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenericToolItemResponse`
        """
        model = GenericToolItemResponse()
        if include_optional:
            return GenericToolItemResponse(
                id = 85,
                notes = 'This is a response.',
                created_at = '2016-08-08T21:35:58Z',
                official = True,
                position = 3,
                status = 'open',
                created_by = None,
                attachments = [
                    procore_sdk.models.rest_v10_work_order_contracts_post_201_response_attachments_inner.RestV10WorkOrderContractsPost_201_response_attachments_inner(
                        id = 5324, 
                        url = 'http://www.example.com/', 
                        filename = 'january_receipt_copy.jpg', )
                    ]
            )
        else:
            return GenericToolItemResponse(
        )
        """

    def testGenericToolItemResponse(self):
        """Test GenericToolItemResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
