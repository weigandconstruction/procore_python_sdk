# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_bim_models_get200_response_inner_one_of import RestV10BimModelsGet200ResponseInnerOneOf

class TestRestV10BimModelsGet200ResponseInnerOneOf(unittest.TestCase):
    """RestV10BimModelsGet200ResponseInnerOneOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10BimModelsGet200ResponseInnerOneOf:
        """Test RestV10BimModelsGet200ResponseInnerOneOf
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10BimModelsGet200ResponseInnerOneOf`
        """
        model = RestV10BimModelsGet200ResponseInnerOneOf()
        if include_optional:
            return RestV10BimModelsGet200ResponseInnerOneOf(
                id = 126,
                title = 'Combined Model',
                auto_publish = True,
                project_id = 29,
                revisions_count = 6,
                web_url = 'https://app.procore.com/60/project/models/list?view=web_viewer&m_id=101',
                created_at = '2018-04-19T09:36:42Z',
                updated_at = '2018-04-20T09:36:42Z',
                current_revision_id = 182
            )
        else:
            return RestV10BimModelsGet200ResponseInnerOneOf(
        )
        """

    def testRestV10BimModelsGet200ResponseInnerOneOf(self):
        """Test RestV10BimModelsGet200ResponseInnerOneOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
