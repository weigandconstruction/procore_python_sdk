# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.project_office1 import ProjectOffice1

class TestProjectOffice1(unittest.TestCase):
    """ProjectOffice1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectOffice1:
        """Test ProjectOffice1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectOffice1`
        """
        model = ProjectOffice1()
        if include_optional:
            return ProjectOffice1(
                id = 3610,
                name = 'Carpinteria',
                address = '100 Construction Lane',
                city = 'Santa Barbara',
                state_code = 'CA',
                country_code = 'US',
                zip = '93101',
                phone = '8059831234',
                fax = '8059834321',
                division = 'First',
                logo = procore_sdk.models.rest_v11_projects_project_id_daily_logs_weather_logs_get_200_response_inner_attachments_inner.RestV11ProjectsProjectIdDailyLogsWeatherLogsGet_200_response_inner_attachments_inner(
                    id = 56, 
                    name = '', 
                    url = '', )
            )
        else:
            return ProjectOffice1(
        )
        """

    def testProjectOffice1(self):
        """Test ProjectOffice1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
