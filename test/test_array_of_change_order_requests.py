# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.array_of_change_order_requests import ArrayOfChangeOrderRequests

class TestArrayOfChangeOrderRequests(unittest.TestCase):
    """ArrayOfChangeOrderRequests unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArrayOfChangeOrderRequests:
        """Test ArrayOfChangeOrderRequests
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayOfChangeOrderRequests`
        """
        model = ArrayOfChangeOrderRequests()
        if include_optional:
            return ArrayOfChangeOrderRequests(
                entities = [
                    procore_sdk.models.array_of_change_order_requests_entities_inner.arrayOfChangeOrderRequests_entities_inner(
                        id = 3284756, 
                        change_order_package_id = 2372497, 
                        contract_id = 195735, 
                        created_at = '2016-10-23T21:39:40Z', 
                        creator = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                            id = 160586, 
                            login = 'carl.contractor@example.com', 
                            name = 'Carl Contractor', ), 
                        deleted_at = '2017-07-29T21:39:40Z', 
                        description = '<p>Freezer slab replacement</p>', 
                        due_date = '2016-11-23T21:39:40Z', 
                        grand_total = '34535.0', 
                        invoiced_date = 'Tue Aug 22 00:00:00 UTC 2017', 
                        number = 'B22', 
                        origin_data = 'OD-2398273424', 
                        origin_id = '459247544', 
                        paid_date = 'Fri Aug 25 00:00:00 UTC 2017', 
                        position = 4, 
                        private = True, 
                        revision = 3, 
                        schedule_impact_amount = 2, 
                        status = 'draft', 
                        title = 'Concrete freezer slab', 
                        updated_at = '2016-10-25T21:39:40Z', 
                        attachments = [
                            procore_sdk.models.rest_v10_companies_company_id_workflow_permanent_logs_get_200_response_inner_attachments_inner.RestV10CompaniesCompanyIdWorkflowPermanentLogsGet_200_response_inner_attachments_inner(
                                id = 56, 
                                name = '', 
                                url = '', 
                                filename = '', )
                            ], 
                        currency_configuration = procore_sdk.models.rest_v10_work_order_contracts_get_200_response_inner_currency_configuration.RestV10WorkOrderContractsGet_200_response_inner_currency_configuration(
                            currency_iso_code = 'USD', ), )
                    ],
                errors = [
                    procore_sdk.models.array_of_change_order_requests_errors_inner.arrayOfChangeOrderRequests_errors_inner()
                    ]
            )
        else:
            return ArrayOfChangeOrderRequests(
        )
        """

    def testArrayOfChangeOrderRequests(self):
        """Test ArrayOfChangeOrderRequests"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
