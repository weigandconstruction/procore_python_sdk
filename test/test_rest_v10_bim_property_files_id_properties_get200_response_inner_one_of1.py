# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_bim_property_files_id_properties_get200_response_inner_one_of1 import RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1

class TestRestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1(unittest.TestCase):
    """RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1:
        """Test RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1`
        """
        model = RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1()
        if include_optional:
            return RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1(
                object_id = 126,
                category = 'Top Constraint',
                name = 'Elevation',
                typed_value = 14.7402790213,
                uom = 'ft',
                value = '14.7402 ft'
            )
        else:
            return RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1(
        )
        """

    def testRestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1(self):
        """Test RestV10BimPropertyFilesIdPropertiesGet200ResponseInnerOneOf1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
