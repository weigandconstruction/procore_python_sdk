# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.generic_tool_items_inner1 import GenericToolItemsInner1

class TestGenericToolItemsInner1(unittest.TestCase):
    """GenericToolItemsInner1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenericToolItemsInner1:
        """Test GenericToolItemsInner1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenericToolItemsInner1`
        """
        model = GenericToolItemsInner1()
        if include_optional:
            return GenericToolItemsInner1(
                id = 123,
                due_date = 'Mon Aug 31 00:00:00 UTC 2020',
                private = True,
                schedule_impact = 'no_impact',
                schedule_impact_value = 'none',
                cost_impact = 'no_impact',
                cost_impact_value = 'none',
                status = 'Open',
                assignee_ids = [
                    83659267
                    ],
                received_from_id = 84674967,
                location_id = 1032218,
                cost_code_id = 78261048,
                specification_section_id = 7855556,
                sub_job_id = 7855543,
                trade_ids = [
                    779365
                    ],
                task_ids = [
                    779333
                    ],
                quantity = 7855543,
                uom = 'ea',
                trade_id = 779365,
                custom_field_custom_field_definition_id = custom field value
            )
        else:
            return GenericToolItemsInner1(
                id = 123,
        )
        """

    def testGenericToolItemsInner1(self):
        """Test GenericToolItemsInner1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
