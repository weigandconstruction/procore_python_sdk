# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.project6 import Project6

class TestProject6(unittest.TestCase):
    """Project6 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Project6:
        """Test Project6
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Project6`
        """
        model = Project6()
        if include_optional:
            return Project6(
                id = 89025,
                name = 'Long Bridge',
                address = procore_sdk.models.project_6_address.Project_6_address(
                    street = '700 Boylston St', 
                    city = 'Boston', 
                    state_code = 'MA', 
                    zip = '2116', 
                    country_code = 'US', ),
                stage_name = 'Pre-Construction',
                status_name = 'Active',
                type_name = 'Commercial',
                open_items = [
                    procore_sdk.models.project_6_open_items_inner.Project_6_open_items_inner(
                        id = 160586, 
                        details = 'The very first RFI', 
                        host = 'https://us02.procore.com', 
                        url = '/2/projects/todo_items/3', )
                    ],
                created_by = procore_sdk.models.project_6_created_by.Project_6_created_by(
                    id = 160586, 
                    email = 'abc@example.com', )
            )
        else:
            return Project6(
        )
        """

    def testProject6(self):
        """Test Project6"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
