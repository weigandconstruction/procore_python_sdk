# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.incident_environmental_update_parameters import IncidentEnvironmentalUpdateParameters

class TestIncidentEnvironmentalUpdateParameters(unittest.TestCase):
    """IncidentEnvironmentalUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IncidentEnvironmentalUpdateParameters:
        """Test IncidentEnvironmentalUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IncidentEnvironmentalUpdateParameters`
        """
        model = IncidentEnvironmentalUpdateParameters()
        if include_optional:
            return IncidentEnvironmentalUpdateParameters(
                environmental_type_id = 56,
                description = '<p>Sprain to <b>Hand</b> by Ground</p>',
                estimated_cost_impact = 20000,
                quantity_value = 1000,
                quantity_unit_of_measure = 'Lbs',
                affected_company_id = 56,
                managed_equipment_id = 56,
                work_activity_id = 56,
                custom_field_custom_field_definition_id = custom field value
            )
        else:
            return IncidentEnvironmentalUpdateParameters(
        )
        """

    def testIncidentEnvironmentalUpdateParameters(self):
        """Test IncidentEnvironmentalUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
