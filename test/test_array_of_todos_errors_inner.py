# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.array_of_todos_errors_inner import ArrayOfTodosErrorsInner

class TestArrayOfTodosErrorsInner(unittest.TestCase):
    """ArrayOfTodosErrorsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArrayOfTodosErrorsInner:
        """Test ArrayOfTodosErrorsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayOfTodosErrorsInner`
        """
        model = ArrayOfTodosErrorsInner()
        if include_optional:
            return ArrayOfTodosErrorsInner(
                id = 12,
                assignment = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                    id = 160586, 
                    login = 'carl.contractor@example.com', 
                    name = 'Carl Contractor', ),
                color = '#A4505D',
                created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                    id = 160586, 
                    login = 'carl.contractor@example.com', 
                    name = 'Carl Contractor', ),
                description = 'Use some power tools to fix the drywall.',
                finish_datetime = '2015-02-07T00:00Z',
                full_outline_path = 'Fix drywall',
                milestone = True,
                name = 'Fix drywall',
                percentage = 99,
                private = False,
                start_datetime = '2015-02-06T00:00Z',
                task_name = 'Fix Drywall',
                updated_at = '2015-02-06T00:00Z',
                errors = procore_sdk.models.rest_v10_work_order_contracts_work_order_contract_id_line_items_sync_patch_200_response_errors_inner_all_of_errors.RestV10WorkOrderContractsWorkOrderContractIdLineItemsSyncPatch_200_response_errors_inner_allOf_errors(
                    field_name = [
                        ''
                        ], )
            )
        else:
            return ArrayOfTodosErrorsInner(
        )
        """

    def testArrayOfTodosErrorsInner(self):
        """Test ArrayOfTodosErrorsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
