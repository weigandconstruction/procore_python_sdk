# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_projects_project_id_schedule_get200_response import RestV10ProjectsProjectIdScheduleGet200Response

class TestRestV10ProjectsProjectIdScheduleGet200Response(unittest.TestCase):
    """RestV10ProjectsProjectIdScheduleGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10ProjectsProjectIdScheduleGet200Response:
        """Test RestV10ProjectsProjectIdScheduleGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10ProjectsProjectIdScheduleGet200Response`
        """
        model = RestV10ProjectsProjectIdScheduleGet200Response()
        if include_optional:
            return RestV10ProjectsProjectIdScheduleGet200Response(
                active_features = procore_sdk.models.rest_v10_projects_project_id_schedule_get_200_response_active_features.RestV10ProjectsProjectIdScheduleGet_200_response_active_features(
                    schedule_activity_feed = True, 
                    schedule_comment_mentions = True, 
                    schedule_gantt_crud = True, 
                    schedule_task_comments = True, 
                    schedule_task_details = True, 
                    schedule_linked_items = True, 
                    new_princess_enabled = True, ),
                last_calendar_view = 'month',
                schedule_present = True,
                schedule_processing = True,
                schedule_crud_beta_agreement = procore_sdk.models.rest_v10_projects_project_id_schedule_get_200_response_schedule_crud_beta_agreement.RestV10ProjectsProjectIdScheduleGet_200_response_schedule_crud_beta_agreement(
                    signed = True, 
                    version = 'onetrust_beta_user/schedule_crud', ),
                schedule_tasks_last_updated_at = '2020-06-04T20:30Z',
                schedule_tasks_edited_manually = True,
                type = procore_sdk.models.rest_v10_projects_project_id_schedule_get_200_response_type.RestV10ProjectsProjectIdScheduleGet_200_response_type(
                    key = 'Microsoft Project', 
                    p6_id = 'NRG00940', ),
                data_date = '2019-01-06T11:26Z',
                lookahead_data_date = '2019-01-06T11:26Z',
                number_of_pending_requested_changes = 2,
                uploaded_at = '2019-01-06T11:26Z',
                office = procore_sdk.models.office.Office(
                    id = 1, 
                    name = 'Main Office', 
                    address = '100 Construction Lane', 
                    city = 'Santa Barbara', 
                    state_code = 'CA', 
                    country_code = 'US', 
                    zip = '93101', 
                    phone = '8059831234', 
                    fax = '8059834321', 
                    division = 'First', 
                    logo = procore_sdk.models.office_logo.Office_logo(
                        id = 56, 
                        name = '', 
                        url = '', 
                        filename = '', ), ),
                project = procore_sdk.models.project.Project(
                    id = 1, 
                    country_code = 'US', 
                    country_name = 'United States', 
                    state_code = 'AL', 
                    state_name = 'Alabama', 
                    county = 'Washington County', 
                    city = 'New York', 
                    address = 'First street 111', 
                    zip = '12345', 
                    phone = '123456789', 
                    fax = '123456789', 
                    time_zone = 'Eastern Time (US & Canada)', 
                    time_zone_name = '(GMT-05:00) Eastern Time (US & Canada)', 
                    logo_url = 'https://some_url_to_logo.png', )
            )
        else:
            return RestV10ProjectsProjectIdScheduleGet200Response(
        )
        """

    def testRestV10ProjectsProjectIdScheduleGet200Response(self):
        """Test RestV10ProjectsProjectIdScheduleGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
