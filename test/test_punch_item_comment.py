# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.punch_item_comment import PunchItemComment

class TestPunchItemComment(unittest.TestCase):
    """PunchItemComment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PunchItemComment:
        """Test PunchItemComment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PunchItemComment`
        """
        model = PunchItemComment()
        if include_optional:
            return PunchItemComment(
                id = 42,
                attachments = [
                    procore_sdk.models.punch_item_comment_attachments_inner.Punch_Item_Comment_attachments_inner(
                        id = 56, 
                        name = '', 
                        url = '', 
                        filename = '', 
                        thumbnail_url = '', )
                    ],
                body = 'New Comment',
                created_at = '2018-10-22T23:46:50Z',
                created_by = procore_sdk.models.punch_item_comment_creator.Punch Item Comment Creator(
                    id = 47531, 
                    name = 'Jane Doe', 
                    login = 'jane.doe@example.com', 
                    company_name = 'Brickworks', ),
                type = 'Comment'
            )
        else:
            return PunchItemComment(
        )
        """

    def testPunchItemComment(self):
        """Test PunchItemComment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
