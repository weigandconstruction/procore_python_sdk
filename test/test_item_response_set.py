# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.item_response_set import ItemResponseSet

class TestItemResponseSet(unittest.TestCase):
    """ItemResponseSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ItemResponseSet:
        """Test ItemResponseSet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ItemResponseSet`
        """
        model = ItemResponseSet()
        if include_optional:
            return ItemResponseSet(
                name = 'Safety Responses',
                active = True,
                memberships_attributes = [
                    procore_sdk.models.item_response_set_memberships_attributes_inner.Item_Response_Set_memberships_attributes_inner(
                        response_attributes = procore_sdk.models.item_response_set_memberships_attributes_inner_response_attributes.Item_Response_Set_memberships_attributes_inner_response_attributes(
                            name = 'Safe - Knowledge', 
                            corresponding_status = 'yes', ), )
                    ]
            )
        else:
            return ItemResponseSet(
                name = 'Safety Responses',
        )
        """

    def testItemResponseSet(self):
        """Test ItemResponseSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
