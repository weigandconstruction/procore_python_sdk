# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_projects_project_id_managed_equipment_get200_response_inner import RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner

class TestRestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner(unittest.TestCase):
    """RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner:
        """Test RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner`
        """
        model = RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner()
        if include_optional:
            return RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner(
                id = 75414,
                name = 'Backhoe',
                company_id = 1,
                current_project_id = 1,
                company_visible = False,
                updated_at = '2015-11-12T21:26:28Z',
                created_at = '2015-11-12T21:26:28Z',
                deleted_at = '2015-11-12T21:26:28Z',
                serial_number = 'S#12892',
                identification_number = 'ID#9018290',
                description = 'This equipment was brought in for the backyard work.',
                managed_equipment_make_id = 14,
                managed_equipment_model_id = 13,
                managed_equipment_type_id = 132,
                managed_equipment_category_id = 13,
                year = 2017,
                status = 'in_use',
                ownership = 'owned',
                created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                    id = 160586, 
                    login = 'carl.contractor@example.com', 
                    name = 'Carl Contractor', ),
                managed_equipment_make = procore_sdk.models.managed_equipment_make.ManagedEquipmentMake(
                    id = 75414, 
                    name = 'CAT', 
                    company_id = 3355, 
                    is_active = True, 
                    updated_at = '2015-11-12T21:26:28Z', 
                    created_at = '2015-11-12T21:26:28Z', 
                    deleted_at = '2015-11-12T21:26:28Z', 
                    created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                        id = 160586, 
                        login = 'carl.contractor@example.com', 
                        name = 'Carl Contractor', ), ),
                managed_equipment_model = procore_sdk.models.managed_equipment_model.ManagedEquipmentModel(
                    id = 75414, 
                    name = 'Earthmoving', 
                    managed_equipment_make_id = 3355, 
                    managed_equipment_type_id = 3356, 
                    company_id = 3355, 
                    is_active = True, 
                    updated_at = '2015-11-12T21:26:28Z', 
                    created_at = '2015-11-12T21:26:28Z', 
                    deleted_at = '2015-11-12T21:26:28Z', 
                    created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                        id = 160586, 
                        login = 'carl.contractor@example.com', 
                        name = 'Carl Contractor', ), 
                    managed_equipment_make = procore_sdk.models.managed_equipment_make.ManagedEquipmentMake(
                        id = 75414, 
                        name = 'CAT', 
                        company_id = 3355, 
                        is_active = True, 
                        updated_at = '2015-11-12T21:26:28Z', 
                        created_at = '2015-11-12T21:26:28Z', 
                        deleted_at = '2015-11-12T21:26:28Z', ), 
                    managed_equipment_type = procore_sdk.models.managed_equipment_type.ManagedEquipmentType(
                        id = 75414, 
                        name = 'Backhoe', 
                        managed_equipment_category_id = 3355, 
                        company_id = 3355, 
                        is_active = True, 
                        updated_at = '2015-11-12T21:26:28Z', 
                        created_at = '2015-11-12T21:26:28Z', 
                        deleted_at = '2015-11-12T21:26:28Z', 
                        managed_equipment_category = procore_sdk.models.managed_equipment_category.ManagedEquipmentCategory(
                            id = 75414, 
                            name = 'Earthmoving', 
                            company_id = 3355, 
                            is_active = True, 
                            updated_at = '2015-11-12T21:26:28Z', 
                            created_at = '2015-11-12T21:26:28Z', 
                            deleted_at = '2015-11-12T21:26:28Z', ), ), ),
                managed_equipment_category = procore_sdk.models.managed_equipment_category.ManagedEquipmentCategory(
                    id = 75414, 
                    name = 'Earthmoving', 
                    company_id = 3355, 
                    is_active = True, 
                    updated_at = '2015-11-12T21:26:28Z', 
                    created_at = '2015-11-12T21:26:28Z', 
                    deleted_at = '2015-11-12T21:26:28Z', 
                    created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                        id = 160586, 
                        login = 'carl.contractor@example.com', 
                        name = 'Carl Contractor', ), ),
                managed_equipment_type = procore_sdk.models.managed_equipment_type.ManagedEquipmentType(
                    id = 75414, 
                    name = 'Backhoe', 
                    managed_equipment_category_id = 3355, 
                    company_id = 3355, 
                    is_active = True, 
                    updated_at = '2015-11-12T21:26:28Z', 
                    created_at = '2015-11-12T21:26:28Z', 
                    deleted_at = '2015-11-12T21:26:28Z', 
                    managed_equipment_category = procore_sdk.models.managed_equipment_category.ManagedEquipmentCategory(
                        id = 75414, 
                        name = 'Earthmoving', 
                        company_id = 3355, 
                        is_active = True, 
                        updated_at = '2015-11-12T21:26:28Z', 
                        created_at = '2015-11-12T21:26:28Z', 
                        deleted_at = '2015-11-12T21:26:28Z', 
                        created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                            id = 160586, 
                            login = 'carl.contractor@example.com', 
                            name = 'Carl Contractor', ), ), 
                    created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                        id = 160586, 
                        login = 'carl.contractor@example.com', 
                        name = 'Carl Contractor', ), )
            )
        else:
            return RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner(
        )
        """

    def testRestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner(self):
        """Test RestV10ProjectsProjectIdManagedEquipmentGet200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
