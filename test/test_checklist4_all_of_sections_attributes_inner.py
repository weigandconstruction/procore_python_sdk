# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.checklist4_all_of_sections_attributes_inner import Checklist4AllOfSectionsAttributesInner

class TestChecklist4AllOfSectionsAttributesInner(unittest.TestCase):
    """Checklist4AllOfSectionsAttributesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Checklist4AllOfSectionsAttributesInner:
        """Test Checklist4AllOfSectionsAttributesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Checklist4AllOfSectionsAttributesInner`
        """
        model = Checklist4AllOfSectionsAttributesInner()
        if include_optional:
            return Checklist4AllOfSectionsAttributesInner(
                name = 'Example Section',
                position = 1,
                items_attributes = [
                    procore_sdk.models.checklist_4_all_of_sections_attributes_inner_items_attributes_inner.Checklist_4_allOf_sections_attributes_inner_items_attributes_inner(
                        name = 'Example Checklist Item', 
                        position = 1, 
                        status = 'yes', )
                    ]
            )
        else:
            return Checklist4AllOfSectionsAttributesInner(
        )
        """

    def testChecklist4AllOfSectionsAttributesInner(self):
        """Test Checklist4AllOfSectionsAttributesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
