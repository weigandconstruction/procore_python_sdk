# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.bim_file_extraction_item_artifact_web_format import BIMFileExtractionItemArtifactWebFormat

class TestBIMFileExtractionItemArtifactWebFormat(unittest.TestCase):
    """BIMFileExtractionItemArtifactWebFormat unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BIMFileExtractionItemArtifactWebFormat:
        """Test BIMFileExtractionItemArtifactWebFormat
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BIMFileExtractionItemArtifactWebFormat`
        """
        model = BIMFileExtractionItemArtifactWebFormat()
        if include_optional:
            return BIMFileExtractionItemArtifactWebFormat(
                cell_file = procore_sdk.models.bim_file_extraction_item_artifact_web_format_cell_file.BIM_File_Extraction_Item_artifact_web_format_cell_file(
                    id = 56, 
                    name = 'filename.ext', 
                    content_type = 'application/vnd.ext', 
                    size = 3124532, 
                    url = 'https://storage.procore.com/v3/d/default/procore-files/1ZE258W9K804SAJJZX19JVAB3R?sig=e7a476ec0a46154d05e0d4a554fb2ea0904cb6604670f9247c54d7c56a84d0b6', ),
                node_file = procore_sdk.models.bim_file_extraction_item_artifact_web_format_cell_file.BIM_File_Extraction_Item_artifact_web_format_cell_file(
                    id = 56, 
                    name = 'filename.ext', 
                    content_type = 'application/vnd.ext', 
                    size = 3124532, 
                    url = 'https://storage.procore.com/v3/d/default/procore-files/1ZE258W9K804SAJJZX19JVAB3R?sig=e7a476ec0a46154d05e0d4a554fb2ea0904cb6604670f9247c54d7c56a84d0b6', ),
                mesh_node_file = procore_sdk.models.bim_file_extraction_item_artifact_web_format_cell_file.BIM_File_Extraction_Item_artifact_web_format_cell_file(
                    id = 56, 
                    name = 'filename.ext', 
                    content_type = 'application/vnd.ext', 
                    size = 3124532, 
                    url = 'https://storage.procore.com/v3/d/default/procore-files/1ZE258W9K804SAJJZX19JVAB3R?sig=e7a476ec0a46154d05e0d4a554fb2ea0904cb6604670f9247c54d7c56a84d0b6', ),
                mesh_file = procore_sdk.models.bim_file_extraction_item_artifact_web_format_cell_file.BIM_File_Extraction_Item_artifact_web_format_cell_file(
                    id = 56, 
                    name = 'filename.ext', 
                    content_type = 'application/vnd.ext', 
                    size = 3124532, 
                    url = 'https://storage.procore.com/v3/d/default/procore-files/1ZE258W9K804SAJJZX19JVAB3R?sig=e7a476ec0a46154d05e0d4a554fb2ea0904cb6604670f9247c54d7c56a84d0b6', ),
                manifest_file = procore_sdk.models.bim_file_extraction_item_artifact_web_format_cell_file.BIM_File_Extraction_Item_artifact_web_format_cell_file(
                    id = 56, 
                    name = 'filename.ext', 
                    content_type = 'application/vnd.ext', 
                    size = 3124532, 
                    url = 'https://storage.procore.com/v3/d/default/procore-files/1ZE258W9K804SAJJZX19JVAB3R?sig=e7a476ec0a46154d05e0d4a554fb2ea0904cb6604670f9247c54d7c56a84d0b6', )
            )
        else:
            return BIMFileExtractionItemArtifactWebFormat(
        )
        """

    def testBIMFileExtractionItemArtifactWebFormat(self):
        """Test BIMFileExtractionItemArtifactWebFormat"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
