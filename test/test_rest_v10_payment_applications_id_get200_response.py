# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_payment_applications_id_get200_response import RestV10PaymentApplicationsIdGet200Response

class TestRestV10PaymentApplicationsIdGet200Response(unittest.TestCase):
    """RestV10PaymentApplicationsIdGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10PaymentApplicationsIdGet200Response:
        """Test RestV10PaymentApplicationsIdGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10PaymentApplicationsIdGet200Response`
        """
        model = RestV10PaymentApplicationsIdGet200Response()
        if include_optional:
            return RestV10PaymentApplicationsIdGet200Response(
                attachments = [
                    procore_sdk.models.rest_v10_work_order_contracts_post_201_response_attachments_inner.RestV10WorkOrderContractsPost_201_response_attachments_inner(
                        id = 5324, 
                        url = 'http://www.example.com/', 
                        filename = 'january_receipt_copy.jpg', )
                    ],
                g703 = [
                    procore_sdk.models.rest_v10_payment_applications_id_get_200_response_all_of_g703_inner.RestV10PaymentApplicationsIdGet_200_response_allOf_g703_inner(
                        id = 135135, 
                        origin_id = 135135, 
                        origin_type = 'LineItem', 
                        added_from_source = 'contract', 
                        added_from_source_id = 135135, 
                        balance_to_finish = '1.00', 
                        materials_presently_stored = '0.00', 
                        scheduled_value = '1.00', 
                        total_completed_and_stored_to_date = '0.00', 
                        total_completed_and_stored_to_date_percent = '0.0', 
                        work_completed_from_previous_application = '0.00', 
                        work_completed_this_period = '0.00', 
                        description_of_work = 'Install windows', 
                        description_override = 'Install windows again', 
                        currency_configuration = procore_sdk.models.rest_v10_payment_applications_id_get_200_response_all_of_g703_inner_currency_configuration.RestV10PaymentApplicationsIdGet_200_response_allOf_g703_inner_currency_configuration(
                            currency_iso_code = 'USD', ), 
                        item_number = 1, 
                        cost_code = null, 
                        wbs_code = procore_sdk.models.wbs_code.Wbs Code(
                            id = 999, 
                            flat_code = '01-011.CT1', 
                            description = 'Project Engineer.Cost Type 1', ), 
                        scheduled_unit_price = '0.0', 
                        scheduled_quantity = '0.0', 
                        total_completed_and_stored_to_date_quantity = '0.0', 
                        work_completed_this_period_quantity = '0.0', 
                        work_completed_from_previous_application_quantity = '0.0', 
                        work_completed_retainage_currently_retained = '0.0', 
                        work_completed_retainage_from_previous_application = '0.0', 
                        work_completed_retainage_released_this_period = '0.0', 
                        work_completed_retainage_retained_this_period = '0.0', 
                        work_completed_retainage_percent_this_period = '10.0', 
                        materials_stored_retainage_currently_retained = '0.0', 
                        materials_stored_retainage_from_previous_application = '0.0', 
                        materials_stored_retainage_released_this_period = '0.0', 
                        materials_stored_retainage_retained_this_period = '0.0', 
                        materials_stored_retainage_percent_this_period = '10.0', 
                        total_retainage_currently_retained = '0.0', 
                        total_retainage_from_previous_application = '0.0', 
                        type = 'payment_application_markup_line_item', )
                    ],
                id = 58820,
                billing_date = 'Wed Nov 20 00:00:00 UTC 2013',
                invoice_number = '123',
                origin_data = 'XYZ-0012',
                origin_id = 'abc-123',
                percent_complete = '0.00',
                period_start = 'Fri Nov 01 00:00:00 UTC 2013',
                period_end = 'Sat Nov 02 00:00:00 UTC 2013',
                period_id = 7682,
                status = 'approved',
                total_amount_paid = '250.00',
                number = 1,
                total_amount_accrued_this_period = '125.00',
                formatted_contract_company = 'Simplex Grinnell LLC',
                currency_configuration = procore_sdk.models.rest_v10_payment_applications_id_get_200_response_all_of_g703_inner_currency_configuration.RestV10PaymentApplicationsIdGet_200_response_allOf_g703_inner_currency_configuration(
                    currency_iso_code = 'USD', ),
                description_type = 'automatic',
                g702 = procore_sdk.models.rest_v10_payment_applications_get_200_response_inner_all_of_g702.RestV10PaymentApplicationsGet_200_response_inner_allOf_g702(
                    balance_to_finish_including_retainage = '1268346.55', 
                    completed_work_retainage_percent = '10.00', 
                    completed_work_retainage_amount = '1201.0', 
                    contract_sum_to_date = '1279159.15', 
                    current_payment_due = '10812.60', 
                    formatted_period = '01/06/19 - 30/06/19', 
                    less_previous_certificates_for_payment = '0.00', 
                    negative_change_order_item_total = '0.00', 
                    negative_new_change_order_item_total = '0.00', 
                    negative_previous_change_order_item_total = '0.00', 
                    net_change_by_change_orders = '256706.65', 
                    original_contract_sum = '1022452.50', 
                    positive_change_order_item_total = '0.00', 
                    positive_new_change_order_item_total = '0.00', 
                    positive_previous_change_order_item_total = '0.00', 
                    stored_materials_retainage_amount = '0.40', 
                    stored_materials_retainage_percent = '10.00', 
                    tax_applicable_to_this_payment = '0.00', 
                    total_completed_and_stored_to_date = '1201.40', 
                    total_earned_less_retainage = '10812.60', 
                    total_retainage = '1201.40', ),
                billing_period = procore_sdk.models.rest_v10_payment_applications_get_200_response_inner_all_of_billing_period.RestV10PaymentApplicationsGet_200_response_inner_allOf_billing_period(
                    start_date = 'Fri Nov 01 00:00:00 UTC 2013', 
                    end_date = 'Sat Nov 30 00:00:00 UTC 2013', ),
                contract = procore_sdk.models.rest_v10_payment_applications_get_200_response_inner_all_of_contract.RestV10PaymentApplicationsGet_200_response_inner_allOf_contract(
                    id = 133745, 
                    type = 'PrimeContract', 
                    title = 'ROYALE', )
            )
        else:
            return RestV10PaymentApplicationsIdGet200Response(
        )
        """

    def testRestV10PaymentApplicationsIdGet200Response(self):
        """Test RestV10PaymentApplicationsIdGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
