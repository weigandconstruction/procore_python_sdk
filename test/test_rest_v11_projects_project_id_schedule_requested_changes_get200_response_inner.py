# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v11_projects_project_id_schedule_requested_changes_get200_response_inner import RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner

class TestRestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner(unittest.TestCase):
    """RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner:
        """Test RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner`
        """
        model = RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner()
        if include_optional:
            return RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner(
                id = 333713,
                change_requested = '<ul><li>Other change: why7</li></ul>',
                created_by = procore_sdk.models.rest_v10_projects_project_id_work_logs_get_200_response_inner_created_by.RestV10ProjectsProjectIdWorkLogsGet_200_response_inner_created_by(
                    id = 160586, 
                    login = 'carl.contractor@example.com', 
                    name = 'Carl Contractor', ),
                new_finish = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                new_start = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                new_percentage = 50,
                old_finish = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                old_start = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                old_percentage = 50,
                other_change = 'Add as milestone',
                reason = '<p>this is a description</p>',
                status = 'Pending',
                status_not_localized = 'pending',
                notes = 'Notes',
                created_at = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner(
        )
        """

    def testRestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner(self):
        """Test RestV11ProjectsProjectIdScheduleRequestedChangesGet200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
