# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_companies_company_id_contributing_conditions_id_patch_request import RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest

class TestRestV10CompaniesCompanyIdContributingConditionsIdPatchRequest(unittest.TestCase):
    """RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest:
        """Test RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest`
        """
        model = RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest()
        if include_optional:
            return RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest(
                contributing_condition = procore_sdk.models.rest_v10_companies_company_id_contributing_conditions_id_patch_request_contributing_condition.RestV10CompaniesCompanyIdContributingConditionsIdPatch_request_contributing_condition(
                    name = '', 
                    active = True, )
            )
        else:
            return RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest(
                contributing_condition = procore_sdk.models.rest_v10_companies_company_id_contributing_conditions_id_patch_request_contributing_condition.RestV10CompaniesCompanyIdContributingConditionsIdPatch_request_contributing_condition(
                    name = '', 
                    active = True, ),
        )
        """

    def testRestV10CompaniesCompanyIdContributingConditionsIdPatchRequest(self):
        """Test RestV10CompaniesCompanyIdContributingConditionsIdPatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
