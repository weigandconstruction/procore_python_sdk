# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.ssov_source_lines import SsovSourceLines

class TestSsovSourceLines(unittest.TestCase):
    """SsovSourceLines unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SsovSourceLines:
        """Test SsovSourceLines
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SsovSourceLines`
        """
        model = SsovSourceLines()
        if include_optional:
            return SsovSourceLines(
                id = 4896147,
                amount = '1000.0',
                description = 'Cleanup',
                position = 1,
                wbs_code = procore_sdk.models.rest_v10_work_order_contracts_post_201_response_line_items_inner_wbs_code.RestV10WorkOrderContractsPost_201_response_line_items_inner_wbs_code(
                    id = 999, 
                    flat_code = '01-011.CT1', 
                    description = 'Project Engineer.Cost Type 1', ),
                currency_configuration = procore_sdk.models.rest_v10_work_order_contracts_get_200_response_inner_currency_configuration.RestV10WorkOrderContractsGet_200_response_inner_currency_configuration(
                    currency_iso_code = 'USD', )
            )
        else:
            return SsovSourceLines(
        )
        """

    def testSsovSourceLines(self):
        """Test SsovSourceLines"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
