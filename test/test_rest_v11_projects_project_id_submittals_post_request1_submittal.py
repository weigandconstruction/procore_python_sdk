# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v11_projects_project_id_submittals_post_request1_submittal import RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal

class TestRestV11ProjectsProjectIdSubmittalsPostRequest1Submittal(unittest.TestCase):
    """RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal:
        """Test RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal`
        """
        model = RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal()
        if include_optional:
            return RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal(
                actual_delivery_date = 'Fri Aug 19 00:00:00 UTC 2022',
                attachments = [
                    'foobar.pdf'
                    ],
                confirmed_delivery_date = 'Fri Aug 19 00:00:00 UTC 2022',
                cost_code_id = 56,
                custom_textarea_1 = '',
                custom_textfield_1 = '',
                description = '',
                design_team_review_time = 56,
                distribution_member_ids = [
                    56
                    ],
                due_date = 'Fri Aug 19 00:00:00 UTC 2022',
                internal_review_time = 56,
                issue_date = 'Fri Aug 19 00:00:00 UTC 2022',
                lead_time = 56,
                location_id = 56,
                number = '',
                private = True,
                prostore_file_ids = [42],
                received_date = 'Fri Aug 19 00:00:00 UTC 2022',
                received_from_id = 56,
                required_on_site_date = 'Fri Aug 19 00:00:00 UTC 2022',
                responsible_contractor_id = 56,
                revision = '',
                scheduled_task_key = '',
                scheduled_task_id = 56,
                source_submittal_log_id = 56,
                specification_section_id = 56,
                status_id = 56,
                sub_job_id = 56,
                submit_by = 'Fri Aug 19 00:00:00 UTC 2022',
                submittal_manager_id = 56,
                submittal_package_id = 56,
                title = '',
                type = '',
                workflow_data = [
                    [
                        procore_sdk.models.rest_v11_projects_project_id_submittals_post_request_1_submittal_workflow_data_inner_inner.RestV11ProjectsProjectIdSubmittalsPost_request_1_submittal_workflow_data_inner_inner(
                            login_information_id = 56, 
                            approver_type = 'Submitter', 
                            days_to_respond = 56, 
                            due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            response_required = True, )
                        ]
                    ],
                custom_field_custom_field_definition_id = custom field value
            )
        else:
            return RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal(
                number = '',
        )
        """

    def testRestV11ProjectsProjectIdSubmittalsPostRequest1Submittal(self):
        """Test RestV11ProjectsProjectIdSubmittalsPostRequest1Submittal"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
