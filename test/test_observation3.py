# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.observation3 import Observation3

class TestObservation3(unittest.TestCase):
    """Observation3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Observation3:
        """Test Observation3
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Observation3`
        """
        model = Observation3()
        if include_optional:
            return Observation3(
                assignee_id = 123,
                checklist_item_id = 456,
                contributing_behavior_id = 789,
                contributing_condition_id = 123,
                coordination_issue_id = 456,
                description = 'Example Observation Item',
                due_date = 'Tue Sep 21 00:00:00 UTC 2021',
                hazard_id = 123,
                name = 'Example Observation Item',
                number = '42',
                incident_action_id = 123,
                personal = True,
                priority = 'Low',
                status = 'initiated',
                trade_id = 123,
                type_id = 456,
                distribution_member_ids = [123,456],
                location_id = 123,
                mt_location = ["Location 1","Location 2"],
                custom_field_custom_field_definition_id = custom field value
            )
        else:
            return Observation3(
                name = 'Example Observation Item',
                type_id = 456,
        )
        """

    def testObservation3(self):
        """Test Observation3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
