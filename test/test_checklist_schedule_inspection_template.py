# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.checklist_schedule_inspection_template import ChecklistScheduleInspectionTemplate

class TestChecklistScheduleInspectionTemplate(unittest.TestCase):
    """ChecklistScheduleInspectionTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChecklistScheduleInspectionTemplate:
        """Test ChecklistScheduleInspectionTemplate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChecklistScheduleInspectionTemplate`
        """
        model = ChecklistScheduleInspectionTemplate()
        if include_optional:
            return ChecklistScheduleInspectionTemplate(
                id = 56,
                attachment_ids = [
                    1
                    ],
                description = '',
                inspection_type = procore_sdk.models.checklist_schedule_inspection_template_inspection_type.Checklist_Schedule_inspection_template_inspection_type(
                    id = 1, 
                    name = 'Quality', ),
                name = '',
                trade_id = 56
            )
        else:
            return ChecklistScheduleInspectionTemplate(
        )
        """

    def testChecklistScheduleInspectionTemplate(self):
        """Test ChecklistScheduleInspectionTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
