# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rfq_change_event_change_event_line_items_inner import RFQChangeEventChangeEventLineItemsInner

class TestRFQChangeEventChangeEventLineItemsInner(unittest.TestCase):
    """RFQChangeEventChangeEventLineItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RFQChangeEventChangeEventLineItemsInner:
        """Test RFQChangeEventChangeEventLineItemsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RFQChangeEventChangeEventLineItemsInner`
        """
        model = RFQChangeEventChangeEventLineItemsInner()
        if include_optional:
            return RFQChangeEventChangeEventLineItemsInner(
                id = 345236,
                cost_code_biller_name = 'Campus',
                cost_code = None,
                cost_code_is_budgeted = True,
                description = 'Add caulk to bathtub base',
                event_id = 623153,
                line_item_type = procore_sdk.models.line_item_type.LineItemType(
                    id = 12345, 
                    name = 'Equipment', 
                    code = 'LB', 
                    base_type = 'materials', 
                    origin_data = 'OD-2398273424', 
                    origin_id = 'ABC123', ),
                rom = 17705,
                contract = procore_sdk.models.rfq_change_event_change_event_line_items_inner_contract.RFQ_change_event_change_event_line_items_inner_contract(
                    id = 11353, 
                    number = '001', ),
                links = procore_sdk.models.rfq_change_event_change_event_line_items_inner_links.RFQ_change_event_change_event_line_items_inner_links(
                    edit = 'https://app.procore.com/22585/project/change_events/events/344096/edit?celi_id=336014#336014', 
                    view = 'https://app.procore.com/22585/project/change_events/events/344096?celi_id=336014#336014', 
                    contract = '', 
                    prime_pco_cost = '', 
                    commitment_contract_cost = '', 
                    commitment_pco_cost = '', 
                    rfq_amount = '', 
                    rom = '', ),
                statuses = procore_sdk.models.rfq_change_event_change_event_line_items_inner_statuses.RFQ_change_event_change_event_line_items_inner_statuses(
                    contract = '', 
                    commitment_contract_cost = '', 
                    commitment_pco_cost = '', 
                    prime_pco_cost = '', 
                    rfq_amount = '', ),
                number = '52225',
                status = 'Open',
                title = 'Example Title',
                vendor = procore_sdk.models.rest_v10_projects_project_id_waste_logs_get_200_response_inner_vendor.RestV10ProjectsProjectIdWasteLogsGet_200_response_inner_vendor(
                    id = 161072, 
                    name = 'SID Architecture', ),
                commitment_contract_cost = '0.0',
                commitment_pco_cost = '1240.0',
                budget_mod_amount = '4500.0',
                budget_mod = procore_sdk.models.rfq_change_event_change_event_line_items_inner_budget_mod.RFQ_change_event_change_event_line_items_inner_budget_mod(
                    created_at = '2016-10-23T21:39:40Z', 
                    transfer_amount = '4500.0', 
                    notes = 'Transfer money for extra concrete.', 
                    from_budget_line_item_id = 348383, 
                    to_budget_line_item_id = 4034034, ),
                prime_pco_cost = '4500.0',
                rfq_amount = '1000.0',
                rfq_status = 'Out for Pricing'
            )
        else:
            return RFQChangeEventChangeEventLineItemsInner(
        )
        """

    def testRFQChangeEventChangeEventLineItemsInner(self):
        """Test RFQChangeEventChangeEventLineItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
