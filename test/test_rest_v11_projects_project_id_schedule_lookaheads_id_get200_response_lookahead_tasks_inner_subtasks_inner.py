# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v11_projects_project_id_schedule_lookaheads_id_get200_response_lookahead_tasks_inner_subtasks_inner import RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner

class TestRestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner(unittest.TestCase):
    """RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner:
        """Test RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner`
        """
        model = RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner()
        if include_optional:
            return RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner(
                id = 43,
                parent_id = 56,
                name = '',
                row_number = 2,
                critical_path = True,
                comment = '',
                activity_id = '1000435',
                wbs = '1.2',
                segments = [
                    procore_sdk.models.rest_v11_projects_project_id_schedule_lookaheads_id_get_200_response_lookahead_tasks_inner_segments_inner.RestV11ProjectsProjectIdScheduleLookaheadsIdGet_200_response_lookahead_tasks_inner_segments_inner(
                        date = '2019-09-20', 
                        status = 'complete', )
                    ],
                resources = [
                    procore_sdk.models.rest_v11_projects_project_id_schedule_lookaheads_id_get_200_response_lookahead_tasks_inner_resources_inner.RestV11ProjectsProjectIdScheduleLookaheadsIdGet_200_response_lookahead_tasks_inner_resources_inner(
                        id = 1, 
                        company_id = 2, 
                        deleted_at = '2019-08-01T00:00Z', 
                        project_id = 3, 
                        source_uid = '00000000-0000-0000-0000-000000000000', )
                    ],
                assignees = [
                    procore_sdk.models.rest_v11_projects_project_id_schedule_lookaheads_id_get_200_response_lookahead_tasks_inner_assignees_inner.RestV11ProjectsProjectIdScheduleLookaheadsIdGet_200_response_lookahead_tasks_inner_assignees_inner(
                        id = 1, 
                        email = 'assignee@example.com', 
                        login_information_id = 2, 
                        name = 'Arnold Assignee', )
                    ],
                vendors = [
                    procore_sdk.models.rest_v11_projects_project_id_schedule_lookaheads_id_get_200_response_lookahead_tasks_inner_vendors_inner.RestV11ProjectsProjectIdScheduleLookaheadsIdGet_200_response_lookahead_tasks_inner_vendors_inner(
                        id = 1, 
                        name = 'Versatile Vendor', )
                    ],
                task = procore_sdk.models.rest_v11_projects_project_id_schedule_lookaheads_id_get_200_response_lookahead_tasks_inner_task.RestV11ProjectsProjectIdScheduleLookaheadsIdGet_200_response_lookahead_tasks_inner_task(
                    id = 56, 
                    finish = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    start = '2019-08-01T00:00Z', ),
                subtasks = [
                    None
                    ]
            )
        else:
            return RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner(
        )
        """

    def testRestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner(self):
        """Test RestV11ProjectsProjectIdScheduleLookaheadsIdGet200ResponseLookaheadTasksInnerSubtasksInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
