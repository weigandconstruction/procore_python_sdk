# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get200_response import RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response

class TestRestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response(unittest.TestCase):
    """RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response:
        """Test RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response`
        """
        model = RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response()
        if include_optional:
            return RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response(
                id = 75414,
                title = 'Concrete',
                base_bid = [
                    procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_base_bid_inner.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_base_bid_inner(
                        id = 1234, 
                        title = 'Concrete', 
                        position = 1, 
                        header = True, 
                        bid_form_items = [
                            procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_base_bid_inner_bid_form_items_inner.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_base_bid_inner_bid_form_items_inner(
                                id = 18, 
                                cost_code = procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_base_bid_inner_bid_form_items_inner_cost_code.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_base_bid_inner_bid_form_items_inner_cost_code(
                                    id = 2, 
                                    name = 'Concrete', 
                                    full_code = '2 - Concrete', ), 
                                description = 'Wood Doors', 
                                position = 1, 
                                subject = 'Is the insurance of tools included in the Bid?', 
                                item_type = 'cost_code', 
                                response_type = 'amount', )
                            ], 
                        sub_sections = [
                            procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_base_bid_inner_sub_sections_inner.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_base_bid_inner_sub_sections_inner(
                                id = 1234, 
                                title = 'Floors 10-19', 
                                position = 1, )
                            ], )
                    ],
                alternates = [
                    procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_alternates_inner.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_alternates_inner(
                        id = 1235, 
                        title = 'Concrete', 
                        position = 1, 
                        header = True, 
                        bid_form_items = [
                            procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_base_bid_inner_bid_form_items_inner.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_base_bid_inner_bid_form_items_inner(
                                id = 18, 
                                cost_code = procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_base_bid_inner_bid_form_items_inner_cost_code.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_base_bid_inner_bid_form_items_inner_cost_code(
                                    id = 2, 
                                    name = 'Concrete', 
                                    full_code = '2 - Concrete', ), 
                                description = 'Wood Doors', 
                                position = 1, 
                                subject = 'Is the insurance of tools included in the Bid?', 
                                item_type = 'cost_code', 
                                response_type = 'amount', )
                            ], 
                        sub_sections = [
                            procore_sdk.models.rest_v10_companies_company_id_bid_bid_id_bid_forms_bid_form_id_get_200_response_base_bid_inner_sub_sections_inner.RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet_200_response_base_bid_inner_sub_sections_inner(
                                id = 1234, 
                                title = 'Floors 10-19', 
                                position = 1, )
                            ], )
                    ]
            )
        else:
            return RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response(
        )
        """

    def testRestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response(self):
        """Test RestV10CompaniesCompanyIdBidBidIdBidFormsBidFormIdGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
