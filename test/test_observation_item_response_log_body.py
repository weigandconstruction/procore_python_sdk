# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.observation_item_response_log_body import ObservationItemResponseLogBody

class TestObservationItemResponseLogBody(unittest.TestCase):
    """ObservationItemResponseLogBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ObservationItemResponseLogBody:
        """Test ObservationItemResponseLogBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ObservationItemResponseLogBody`
        """
        model = ObservationItemResponseLogBody()
        if include_optional:
            return ObservationItemResponseLogBody(
                project_id = 123456,
                response_log = procore_sdk.models.response_log.Response Log(
                    comment = 'Response log comment', 
                    prostore_file_ids = [123,456], ),
                status = 'initiated'
            )
        else:
            return ObservationItemResponseLogBody(
                project_id = 123456,
                response_log = procore_sdk.models.response_log.Response Log(
                    comment = 'Response log comment', 
                    prostore_file_ids = [123,456], ),
        )
        """

    def testObservationItemResponseLogBody(self):
        """Test ObservationItemResponseLogBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
