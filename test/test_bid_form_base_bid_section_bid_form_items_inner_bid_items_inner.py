# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.bid_form_base_bid_section_bid_form_items_inner_bid_items_inner import BidFormBaseBidSectionBidFormItemsInnerBidItemsInner

class TestBidFormBaseBidSectionBidFormItemsInnerBidItemsInner(unittest.TestCase):
    """BidFormBaseBidSectionBidFormItemsInnerBidItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BidFormBaseBidSectionBidFormItemsInnerBidItemsInner:
        """Test BidFormBaseBidSectionBidFormItemsInnerBidItemsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BidFormBaseBidSectionBidFormItemsInnerBidItemsInner`
        """
        model = BidFormBaseBidSectionBidFormItemsInnerBidItemsInner()
        if include_optional:
            return BidFormBaseBidSectionBidFormItemsInnerBidItemsInner(
                id = 100,
                bid_id = 392,
                bid_item_id = 75414,
                vendor_id = 75414,
                amount = 12039.55,
                unit_cost = '$15.00',
                quantity = '5',
                uom = '1-11',
                included = True
            )
        else:
            return BidFormBaseBidSectionBidFormItemsInnerBidItemsInner(
        )
        """

    def testBidFormBaseBidSectionBidFormItemsInnerBidItemsInner(self):
        """Test BidFormBaseBidSectionBidFormItemsInnerBidItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
