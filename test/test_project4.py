# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.project4 import Project4

class TestProject4(unittest.TestCase):
    """Project4 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Project4:
        """Test Project4
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Project4`
        """
        model = Project4()
        if include_optional:
            return Project4(
                id = 89025,
                logo_url = 'https://s3.amazonaws.com/pro-core.com/prostore/20150904220156_production_105341655.png?AWSAccessKeyId=0PFNH01C4MZVXKXZNK82&Expires=2091808024&Signature=qELZAktHou5QICU747PbcEcN0AY%3D',
                name = 'Casa de Casper',
                display_name = 'A-1 Casa de Casper',
                project_number = 'A-1',
                address = '500 Construction Way',
                city = 'Carpinteria',
                state_code = 'CA',
                country_code = 'US',
                zip = '93110',
                time_zone = 'US/Pacific',
                latitude = 34.3850464855729,
                longitude = -119.490849121334,
                description = 'Very cool project.',
                square_feet = 5000,
                start_date = 'Fri May 15 00:00:00 UTC 2015',
                completion_date = 'Fri May 15 00:00:00 UTC 2015',
                total_value = '10000.0',
                store_number = '3',
                accounting_project_number = '3456',
                designated_market_area = 'Southeast',
                warranty_start_date = 'Fri May 15 00:00:00 UTC 2015',
                warranty_end_date = 'Sun May 31 00:00:00 UTC 2015',
                active = True,
                flag = 'Yellow',
                phone = '707-555-9866',
                public_notes = 'We're building a large private residence.',
                actual_start_date = 'Fri May 15 00:00:00 UTC 2015',
                projected_finish_date = 'Sun May 31 00:00:00 UTC 2015',
                created_at = '2014-12-29T21:53:56Z',
                updated_at = '2016-03-14T16:52:22Z',
                origin_id = 'OD-2398273424',
                origin_data = '459247544',
                origin_code = 'Code 123',
                estimated_start_date = 'Fri May 15 00:00:00 UTC 2015',
                estimated_completion_date = 'Sun May 31 00:00:00 UTC 2015',
                estimated_value = '10000.0',
                office = procore_sdk.models.project_office.ProjectOffice(
                    id = 3610, 
                    name = 'Carpinteria', ),
                project_bid_type_id = 1,
                project_owner_type_id = 5,
                project_region_id = 22,
                project_stage = procore_sdk.models.project_stage.ProjectStage(
                    id = 3, 
                    name = 'Course of Construction', ),
                project_type = procore_sdk.models.project_type.ProjectType(
                    id = 1, 
                    name = 'Project Type A', ),
                program = procore_sdk.models.project_program.ProjectProgram(
                    id = 4, 
                    name = 'Design Bid', ),
                departments = [
                    procore_sdk.models.project_department.ProjectDepartment(
                        id = 2, 
                        name = 'Residential', )
                    ]
            )
        else:
            return Project4(
        )
        """

    def testProject4(self):
        """Test Project4"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
