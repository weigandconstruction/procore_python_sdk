# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.rest_v10_companies_company_id_generic_tools_generic_tool_id_patch200_response import RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response

class TestRestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response(unittest.TestCase):
    """RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response:
        """Test RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response`
        """
        model = RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response()
        if include_optional:
            return RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response(
                id = 5324,
                abbreviation = 'CT',
                domain_id = -5324,
                title = 'Custom Tool'
            )
        else:
            return RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response(
        )
        """

    def testRestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response(self):
        """Test RestV10CompaniesCompanyIdGenericToolsGenericToolIdPatch200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
