# coding: utf-8

"""
    Procore Rest API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Contact: apisupport@procore.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from procore_sdk.models.body88 import Body88

class TestBody88(unittest.TestCase):
    """Body88 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Body88:
        """Test Body88
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Body88`
        """
        model = Body88()
        if include_optional:
            return Body88(
                drawing = procore_sdk.models.drawing.Drawing(
                    number = 'A2', 
                    title = 'Architectural 2nd Floor', 
                    obsolete = True, 
                    drawing_discipline = procore_sdk.models.drawing_1_drawing_discipline.Drawing_1_drawing_discipline(
                        name = 'Architectural', ), 
                    ordered_revision_ids = [1587816], )
            )
        else:
            return Body88(
                drawing = procore_sdk.models.drawing.Drawing(
                    number = 'A2', 
                    title = 'Architectural 2nd Floor', 
                    obsolete = True, 
                    drawing_discipline = procore_sdk.models.drawing_1_drawing_discipline.Drawing_1_drawing_discipline(
                        name = 'Architectural', ), 
                    ordered_revision_ids = [1587816], ),
        )
        """

    def testBody88(self):
        """Test Body88"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
